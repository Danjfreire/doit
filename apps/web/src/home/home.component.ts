import { Component, inject, OnInit } from '@angular/core';
import { TodoService } from './shared/todo.service';
import { FormsModule } from '@angular/forms';

export interface Todo {
  id: string;
  description: string;
}

@Component({
  selector: 'app-home',
  standalone: true,
  imports: [FormsModule],
  templateUrl: './home.component.html',
  styleUrl: './home.component.css',
})
export class HomeComponent implements OnInit {
  todos: Todo[] = [];

  todoService = inject(TodoService);

  ngOnInit() {
    this.loadTodos();
  }

  addTodo() {
    // create a new todo item with a temporary id and add it to the list
    // make a request to the server to create a new todo item
    // if the request is successful, update the todo item with the response to get the real id

    const randomId = Math.random().toString(32).substring(7);
    console.log(randomId);
    const newTodo: Todo = {
      id: randomId,
      description: '',
    };
    this.todos.unshift(newTodo);

    setTimeout(() => {
      const element = document.getElementById(randomId);
      if (element) {
        element.focus();
        console.log('focused');
      }
    }, 10);
  }

  saveTodo(todo: Todo, event: Event) {
    console.log('Before:', todo.id);
    this.todoService.createTodo(todo).subscribe((res) => {
      // update the todo item with the real id generated by the server
      todo.id = res.id;
      console.log('After:', todo.id);

      // remove the focus from the input field
      const element = event.target as HTMLElement;
      element.blur();
    });
  }

  private loadTodos() {
    this.todoService.loadTodos().subscribe((res) => {
      this.todos = res.todos;
    });
  }
}
